on: [push]
name: Azure ARM
jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

    #   # Log into Azure
    # - uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDS_AUHOBBSGHE }}
    #     environment: ${{ secrets.AZURE_ENVIRONMENT }}

    #   # Deploy ARM template
    # - name: Run ARM deploy
    #   uses: azure/arm-deploy@v1
    #   with:
    #     subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
    #     resourceGroupName: ${{ secrets.AZURE_RG }}
    #     template: ./azureDeploy.json
    #     parameters: >
    #       storageAccountType="Standard_LRS"
    #       location="USGovVirginia"

      # output containerName variable from template
    - name: Deploy ADF ARM templates
      shell: powershell
      env:
        TENANT_ID: "8a09f2d7-8415-4296-92b2-80bb4666c5fc"
        CLIENT_ID: "c58adfec-3e2e-4f52-a280-a82e2fbde1db"
        SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
        OBJECT_ID: "7e402f4f-1f4b-4f83-8aa1-cccee5d59232"
        SECRET: ${{ secrets.AZURE_SECRET }}
        ADF_Synapse_Conn_connectionString: ${{ secrets.ADF_SYNAPSE_CONN_CONNECTIONSTRING }}

      run: |
        Write-Output $PSVersionTable
        # Get-Module -ListAvailable Az* | format-table Name
        Get-ChildItem ./
        Install-Module Az -AllowClobber -SkipPublisherCheck -Force
        $pw = ConvertTo-SecureString -String $env:SECRET -Force -AsPlainText
        $cred = New-Object System.Management.Automation.PSCredential($env:CLIENT_ID, $pw)
        Connect-AzAccount -ServicePrincipal -Credential $cred -TenantId $env:TENANT_ID -Environment AzureUSGovernment
        Select-AzSubscription -SubscriptionId $env:SUBSCRIPTION_ID
        Get-AzResourceGroup | select *Name*

        function secure($title, $str) {
            Write-Output "Attempting to convert $title"
            if (-not $str) {
              Write-Output "No string in payload"
              return $null
            }

            Write-Output "String has payload"
            return ConvertTo-SecureString -AsPlainText -Force -String $str
        }


        Write-Output "ADF_Synapse_Conn_connectionString:" + $env:ADF_SYNAPSE_CONN_CONNECTIONSTRING
        $params = @{
          ADF_SYNAPSE_CONN_CONNECTIONSTRING = secure("ADF_SYNAPSE_CONN_STRING", $env:ADF_SYNAPSE_CONN_CONNECTIONSTRING)
        }


        # New-AzResourceGroupDeployment -ResourceGroupName ghe -TemplateFile ./azureDeploy.json -storageAccountType "Standard_LRS" -this-is-a_TEST test-adf-adkjf_djf_FJ

